{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-98a1510ce12f336c.js","src/index.js","src/sections/artists.js","src/api.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/sections/songs.js","src/sections/player.js","src/lib/formatTimestamp.js","src/favorites.js","src/lib/JsonStorage.js","src/sections/search_input.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"890e741a975ef6c8\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\n\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, assetsToDispose\n/*: Array<[ParcelRequire, string]> */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets); // Dispose all old assets.\n\n        let processedAssets = {}\n        /*: {|[string]: boolean|} */\n        ;\n\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        } // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n\n\n        processedAssets = {};\n\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\n\nfunction hmrDispose(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n\n  delete bundle.cache[id];\n}\n\nfunction hmrAccept(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  // Execute the module.\n  bundle(id); // Run the accept callbacks in the new version of the module.\n\n  var cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        }); // $FlowFixMe[method-unbinding]\n\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import renderArtists from './sections/artists'\nimport { renderSongsForArtistSection, renderSongsForSearchSection, renderFavoritesSongsSection } from './sections/songs'\n\n// On les importe au moins une fois dans l'index, pour être sûr que les eventlisteners seront appelés\nimport './sections/search_input'\n\n// S'occuper de \"toggler\" les liens dans la navigation\n// Désactiver le lien actif et activer le nouveau en bleu, selon l'url passée en paramètre de la fonction\nconst toggleNav = (hash) => {\n  // On va chercher le lien actuellement affiché (n'importe quel lien dans \"nav\" qui a une classe active) et en enlève\n  // la classe active\n  // NB: Noter le ? après le querySelector. Cela veut dire \"si on a trouvé quelque chose, on fait la suite, autrement rien\"\n  document.querySelector(`nav a.active`)?.classList.remove('active')\n  // On va chercher le lien avec pour url le href passé en argument et y ajouter la classe active pour le rendre bleu\n  // Exemple: <a href=\"#player\">...</a>\n  // NB: Noter le ? après le querySelector. Cela veut dire \"si on a trouvé quelque chose, on fait la suite, autrement rien\"\n  document.querySelector(`nav a[href=\"${hash}\"]`)?.classList.add('active')\n}\n\n// S'occuper de \"toggler\" les sections dans le body, en cachant la section actuellement affichée, puis en ajoutant\n// la classe active à la nouvelle pour l'afficher\nconst toggleSection = (hash) => {\n  // Comme pour le menu, on enlève la classe active à la section en cours\n  document.querySelector(`section.active`)?.classList.remove('active')\n  // et on essaie de trouver la section correspondante et l'afficher, en y ajoutant la classe active\n  document.querySelector(`${hash}-section`)?.classList.add('active')\n}\n\nconst displaySection = (hash) => {\n  if(hash == '') hash = '#home'\n\n  const hashSplit = hash.split('-')\n\n  // On appelle la fonction toggleNav qui va s'occuper de \"toggler\" les liens dans la navigation. On se sert toujours\n  // de la première partie de l'url (comme ça, si #artists-12 --> #artists est sélectionné)\n  toggleNav(hashSplit[0])\n\n  // On appelle la fonction toggleSection qui va s'occuper de \"toggler\" les sections dans le body. Par défaut, la première\n  // partie de l'url correspond à une section dans le HTML, par exemple -> #home --> #home-section. Dans certains cas,\n  // on va appeler cette fonction manuellement avec une valeur spécifique, pour afficher la section list, car l'url\n  // ne correspond pas\n  toggleSection(hashSplit[0])\n\n  switch(hashSplit[0]) {\n    case '#artists':\n      // S'il y a un paramètre derrière...? Ex: -> #artists-12 -> hashSplit[1] vaudra 12\n      if(hashSplit[1]){\n        // Cela nous permet d'afficher la section générique \"list\"\n        toggleSection('#list')\n\n        // On affiche la liste des chansons pour un artiste donné (d'après son ID reçu en paramètre)\n        renderSongsForArtistSection(hashSplit[1])\n      }\n      else {\n        // On affiche la liste des artistes\n        renderArtists()\n      }\n    break;\n\n    case '#search':\n      // Cela nous permet d'afficher la section générique \"list\"\n      toggleSection('#list')\n\n      // On affiche la liste des chansons pour le terme de recherche reçu en paramètre\n      renderSongsForSearchSection(hashSplit[1])\n    break;\n\n    case '#favorites':\n        // Cela nous permet d'afficher la section générique \"list\"\n      toggleSection('#list')\n\n      // On affiche la liste des chansons présentent dans les favoris\n      renderFavoritesSongsSection()\n    break;\n  }\n}\n\n// Ici, on écoute la mise à jour des favoris dans le storage. Lorsque la liste à changé et que l'on est dans la section\n// favoris, on remet à jour la liste pour enlever les éléments déselectionnés\nwindow.addEventListener('favorites_updated', () => {\n  if(window.location.hash == '#favorites')\n    renderFavoritesSongsSection()\n})\n\n// On link la fonction \"displaySection\" à l'événement hashchange pour être averti d'un changement de hash dans l'url\nwindow.addEventListener('hashchange', () => displaySection(window.location.hash))\n\n// Affichage au chargement pour traiter l'url en cours (exemple: on ouvre un lien dans un nouvel onglet)\ndisplaySection(window.location.hash)\n","import { getArtists } from '../api'\n\n // On obtient l'élément DOM qui nous servira de template pour un élément de la liste d'artistes\nconst artistListItemTemplate = document.querySelector('#artist-list-item-template')\n\n// Element DOM de la liste à manipuler\nconst artistList =  document.querySelector('.artist-list')\n\n// Génère le HTML nécessaire pour afficher la liste des artistes\nconst renderArtists = async () => {\n  // On vide la liste de ses anciennes informations, pour en ajouter de nouvelles à jour\n  artistList.replaceChildren()\n\n  // On récupère les artistes depuis l'API\n  const artists = await getArtists()\n\n  // On itère sur chacun des artistes récupérés depuis l'API\n  artists.forEach((artist) => {\n    // Créer une copie du template et de son contenu pour avoir un nouvelle élément vierge\n    // que l'on stock dans la variable newArtistItem\n    const newArtistItem = artistListItemTemplate.content.cloneNode(true)\n\n    // On modifie l'url du lien qui se trouve à l'intérieur, pour avoir une URL du style #artists-12\n    newArtistItem.querySelector('a').href = '#artists-' + artist.id\n\n    // On rempli le titre de l'artiste dans ce nouvel élément, en sélectionnant l'élément\n    // artist-list-item-title à l'intérieur (!dans newArtistItem! Pas dans document)\n    newArtistItem.querySelector('.artist-list-item-title').innerHTML = artist.name\n\n    // On modifie le src de l'image qui se trouve à l'intérieur, pour afficher la cover de l'artiste\n    newArtistItem.querySelector('img').src = artist.image_url\n\n    // On l'ajoute à la liste d'artistes\n    artistList.append(newArtistItem)\n  })\n}\n\nexport default renderArtists\n","// URL de base du serveur\nconst BASE_URL = 'https://webmob-ui-22-spotlified.herokuapp.com'\n\n// Fonction loadJson utilisée à l'interne. Elle s'occupe de charger l'url passée en paramètre et convertir\n// son résultat en json\nasync function loadJson(url) {\n  const response = await fetch(url)\n  const parsedJson = await response.json()\n  return parsedJson\n}\n\n// Retourne une liste d'artistes\nasync function getArtists() {\n  return await loadJson(`${BASE_URL}/api/artists`)\n}\n\n// Retourne la liste des chansons d'un ariste\nasync function getSongsForArtist(id) {\n  return await loadJson(`${BASE_URL}/api/artists/${id}/songs`)\n}\n\n// Retourne un résultat de recherche\nasync function searchSongs(query) {\n  return await loadJson(`${BASE_URL}/api/songs/search/${encodeURIComponent(query)}`)\n}\n\nexport { getArtists, getSongsForArtist, searchSongs }\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import { getSongsForArtist, searchSongs } from '../api'\nimport playSong from './player'\nimport { getFavorites, toggleFavorite, isInFavorite } from '../favorites'\n\n// On obtient l'élément DOM qui nous servira de template pour un élément de la list\nconst songListItemTemplate = document.querySelector('#list-item-template')\n\n// Element DOM de la liste à manipuler\nconst songList = document.querySelector('.list')\n\nconst songSectionTitle = document.querySelector('#list-section h4')\n\n// Cette fonction s'occupe de modifier l'icone à l'intérieur de l'élément passé en paramètre,\n// selon si la chanson en deuxième paramètre est présente ou non\nconst toggleFavoriteIcon = (favoriteIcon, song) => {\n  if(isInFavorite(song)) {\n    favoriteIcon.innerText = 'playlist_remove' // ou favorite pour le coeur plein\n  } else {\n    favoriteIcon.innerText = 'playlist_add'  // ou favorite_border pour le coeur vide\n  }\n}\n\n// Génère le HTML nécessaire pour afficher une liste de chansons, basé sur le tableau passé en paramètre\nconst renderSongs = (songs) => {\n  // On vide la liste de ses anciennes informations, pour en ajouter de nouvelles à jour\n  songList.replaceChildren()\n\n  // On itère sur chacune des chansons récupérées depuis l'API pour cet artiste\n  songs.forEach((song) => {\n    // Créer une copie du template et de son contenu pour avoir un nouvelle élément vierge\n    // que l'on stock dans la variable newSongItem\n    const newSongItem = songListItemTemplate.content.cloneNode(true)\n\n    // On rempli le titre de la chanson dans ce nouvel élément, en sélectionnant l'élément\n    // list-item-title à l'intérieur (!dans newSongItem! Pas dans document)\n    newSongItem.querySelector('.list-item-title').innerHTML = song.title\n\n    // Au clique sur le bouton play, on transmet la chanson et le tableau duquel elle provient au player. Cela permet de\n    // lire la chanson et passer le contexte actuel au player (le tableau) pour faire précédent/suivant\n    newSongItem.querySelector('.play-button').addEventListener('click', () => {\n      playSong(song, songs)\n      window.location.hash = '#player'\n    })\n\n    // On récupère l'icone des favoris pour le modifier\n    const favoriteIcon = newSongItem.querySelector('.favorite-button .material-icons')\n\n    // Au clique sur le bouton favori, on toggle la chanson dans le storage et on ajuste son icone en fonction\n    newSongItem.querySelector('.favorite-button').addEventListener('click', () => {\n      toggleFavorite(song)\n      toggleFavoriteIcon(favoriteIcon, song) // on passe le target du click, à savoir l'icône\n    })\n\n    // A l'insertion, on met à jour l'icone, si la chanson est présente dans les favoris, afin d'avoir un icône\n    // correspondant à l'état de base\n    toggleFavoriteIcon(favoriteIcon, song)\n\n    // On l'ajoute à la liste de chansons\n    songList.append(newSongItem)\n  })\n}\n\n// Génère le HTML nécessaire pour afficher la liste de chanson d'un artiste, basé sur son id\nconst renderSongsForArtistSection = async (artistId) => {\n  // On récupère les songs d'un artiste depuis l'API, en se servant de son Id passé en paramètre\n  const songs = await getSongsForArtist(artistId)\n\n  // Set le nom de l'artiste\n  songSectionTitle.textContent = `Artistes > ${songs[0].artist.name}`\n\n  // Affiche les chansons\n  renderSongs(songs)\n}\n\n// Génère le HTML nécessaire pour afficher la liste de chanson d'un artiste, basé sur son id\nconst renderSongsForSearchSection = async (query) => {\n  // On récupère les songs correspondant à la recherche depuis l'API, en se servant de la query passée en paramètre\n  const songs = await searchSongs(query)\n\n  // Set le titre de la section\n  songSectionTitle.textContent = `Résultats pour \"${decodeURIComponent(query)}\"`\n\n  // Affiche les chansons\n  renderSongs(songs)\n}\n\n// Charge la section des chansons selon le tableau de favoris\nconst renderFavoritesSongsSection = () => {\n  // On récupère les songs présentent dans les favoris\n  const songs = getFavorites()\n\n  // Set le titre de la section\n  songSectionTitle.innerText = 'Favoris'\n\n  // Affiche les chansons\n  renderSongs(songs)\n}\n\nexport { renderSongsForArtistSection, renderSongsForSearchSection, renderFavoritesSongsSection }\n","import formatTimestamp from '../lib/formatTimestamp'\n\n////////// Constantes des différents tags HTML\n// Tag audio\nconst audioPlayer = document.querySelector('#audio-player')\n\n// Song infos\nconst playerThumbnail = document.querySelector('#player-thumbnail-image')\nconst playerSongTitle = document.querySelector('#player-infos-song-title')\nconst playerArtistName = document.querySelector('#player-infos-artist-name')\n\n// Controls\nconst playerPrev = document.querySelector('#player-control-previous')\nconst playerPlay = document.querySelector('#player-control-play')\nconst playerPlayIcon = document.querySelector('#player-control-play .material-icons')\nconst playerNext = document.querySelector('#player-control-next')\n\n// Progress\nconst playerTimeCurrent = document.querySelector('#player-time-current')\nconst playerTimeDuration = document.querySelector('#player-time-duration')\nconst playerProgress = document.querySelector('#player-progress-bar')\n\n// Logo\nconst logo = document.querySelector('#logo')\n\n////////// Logique\n\n// songs contiendra la liste des chansons en cours de lecture, afin de pouvoir se déplacer entre les chansons\nlet songList = []\n// La chanson en cours de lecture\nlet currentSong = null\n\n// Lire une chanson sur laquelle on clique\nconst playSong = (song, songs) => {\n  // On enregistre la chanson en cours de lecture\n  currentSong = song\n\n  // si un tableau est transmis, on le met à jour. Cela nous permet d'utiliser juste playSong(song) à l'interne,\n  // sans devoir le repasser à chaque fois (depuis previous/next, par exemple)\n  if(songs)\n    songList = songs\n\n  // On donne l'url au player et démarre la lecture\n  audioPlayer.src = song.audio_url\n  audioPlayer.play()\n\n  // Remplacement des différentes informations au sein des tags\n  playerSongTitle.innerHTML = song.title\n  playerArtistName.innerHTML = song.artist.name\n  playerThumbnail.src = song.artist.image_url\n}\n\n// Lis la chanson suivante, d'après la chanson en cours\nconst playNextSong = () => {\n  const index = songList.indexOf(currentSong)\n  const newIndex = index + 1\n  // On s'assure qu'on n'arrive jamais en dehors du tableau et on reboucle sur le début\n  if(newIndex < songList.length)\n    playSong(songList[newIndex])\n  else\n    playSong(songList[0])\n}\n\n// Lis la chanson précédente, d'après la chanson en cours\nconst playPreviousSong = () => {\n  const index = songList.indexOf(currentSong)\n  const newIndex = index - 1\n  // On s'assure qu'on n'arrive jamais en dehors du tableau et on reboucle sur la fin\n  if(newIndex >= 0)\n    playSong(songList[newIndex])\n  else\n    playSong(songList[songList.length - 1])\n}\n\n// Met à jour l'icone du bouton play/pause dans le player + anime l'icone de l'app\nconst updateIcon = () => {\n  if(audioPlayer.paused) {\n    playerPlayIcon.innerHTML = 'play_arrow'\n\n    // On arrête d'animer le logo de l'application lorsqu'aucune chanson ne se lit, pour moins de fancyness\n    logo.classList.remove('animated')\n\n  } else {\n    playerPlayIcon.innerHTML = 'pause'\n\n    // On anime le logo de l'application lorsqu'une chanson se lit, pour plus de fancyness\n    logo.classList.add('animated')\n  }\n}\n\n// On écoute le clique sur le bouton play et on transmets l'instruction au player\nplayerPlay.addEventListener('click', () => {\n  if(audioPlayer.paused)\n    audioPlayer.play()\n  else\n    audioPlayer.pause()\n})\n\n// Bouton précédent\nplayerPrev.addEventListener('click', playPreviousSong)\n\n// Bouton suivant\nplayerNext.addEventListener('click', playNextSong)\n\n// Lorsque l'on click sur la barre de progression, on change sa valeur et elle émet donc un événement \"change\" pour\n// avertir de son changement. Comme on a défini la valeur max comme étant la durée totale de la chanson, toute valeur\n// transmise est forcément incluse dans cet interval. On peut alors la passer au player sans problème\nplayerProgress.addEventListener('change', (event) => {\n  audioPlayer.currentTime = event.currentTarget.value\n})\n\n// Lorsque nous faison \".src = \" sur le player, celui-ci va télécharger la chanson en arrière plan et calculer\n// sa longueur. Lorsque c'est fait, il émet un event \"durationchange\" pour nous informer qu'il connait maintenant\n// sa durée (en secondes!) et que l'on peut se servir de cette information\naudioPlayer.addEventListener('durationchange', () => {\n  // On défini la valeur maximum du slider de la chanson comme étant sa durée en secondes\n  playerProgress.max = audioPlayer.duration\n  // On affiche la durée totale, grâce à la fonction de formattage du temps\n  playerTimeDuration.innerText = formatTimestamp(audioPlayer.duration)\n})\n\n// Lorsque la chanson est en cours de lecture, l'événement \"timeupdate\" sera envoyé plusieurs fois par seconde\n// pour avertir de l'avancée dans la lecture. C'est cet événement qui nous permet de bouger la barre de progression\n// au fur et à mesure que la chanson se lit.\naudioPlayer.addEventListener('timeupdate', () => {\n  // On récupère la valeur \"currentTime\" qui est la position dans la chanson au sein du player et on la transmets\n  // à la progress bar comme étant sa valeur. La progress bar a comme valeur minimum 0 et comme valeur max la durée\n  // totale de la chanson. En lui passant le currrentTime, il sera forcément entre le min et le max et le browser\n  // pourra afficher la petite boule au bon endroit\n  playerProgress.value = audioPlayer.currentTime\n  // On affiche la position de lecture, grâce à la fonction de formattage du temps\n  playerTimeCurrent.innerText = formatTimestamp(audioPlayer.currentTime)\n})\n\n// Lorsque le player se met en lecture, il émet un évent \"play\" pour annoncer le début de lecture. Dans ce cas,\n// on change l'icône du bouton play à pause\n//\n// Pourquoi faire ça ici et non dans le \"click\" sur le bouton ? :) Que se passe-t-il si vous utilisez le bouton\n// \"play/pause\" natif qui se trouve sur votre clavier ? Cela va mettre en pause la chanson, mais l'événement \"click\"\n// du bouton play/pause ne sera pas émis, donc icône pas mis à jour, car vous avez utilisez votre clavier et\n// non le bouton.\n// En revanche, lorsque votre OS reçoit le click sur le clavier, il trouve l'application qui émet du son (en l'occ.\n// notre browser) et lui demande d'arrêter. Le browser va chercher quel élément audio lis actuellement de la musique\n// et va faire un \"audioPlayer.pause()\". Les évenements play/pause seront donc transmis et c'est pour cela qu'il est\n// mieux de gérer le changement d'icône ici\naudioPlayer.addEventListener('play', updateIcon)\n\n// Lorsque le player pause la lecture, il émet un évent \"pause\" pour annoncer le pause de lecture. Dans ce cas,\n// on change l'icône du bouton pause à play\n// voir commentaire précédent\naudioPlayer.addEventListener('pause', updateIcon)\n\nexport default playSong\n","export default function formatTimestamp(timestamp) {\n  timestamp = parseInt(timestamp, 10)\n  let hours   = Math.floor(timestamp / 3600)\n  let minutes = Math.floor((timestamp - (hours * 3600)) / 60)\n  let seconds = timestamp - (hours * 3600) - (minutes * 60)\n\n  if (minutes < 10) minutes = \"0\" + minutes\n  if (seconds < 10) seconds = \"0\" + seconds\n  return minutes + ':' + seconds\n}\n","import JsonStorage from './lib/JsonStorage'\n\n// Création d'un storage exprès pour les favoris\n// L'idée est d'utiliser l'id de la chanson en tant que clé de stockage. Comme elle est unique dans toute l'app,\n// pas de problème d'écrasement et cela permet de checker très facilement si une chanson est contenue ou non dans\n// le storage. Exemple: favoritesStorage.getItem(song.id)\nconst favoritesStorage = new JsonStorage({ name: 'favorites', eventName: 'favorites_updated' })\n\n// Cette fonction toggle une chanson au sein de la liste des favoris\nconst toggleFavorite = (song) => {\n  if(isInFavorite(song)) {\n    favoritesStorage.removeItem(song.id)\n  } else {\n    favoritesStorage.setItem(song.id, song)\n  }\n}\n\n// Vérifie si une chanson est dans les favoris (retourne l'entry si oui, undefined si non)\nconst isInFavorite = (song) => {\n  return favoritesStorage.getItem(song.id)\n}\n\n// Retourne la liste des favoris sous forme de tableau avec seulement la valeur (voir slides pour explication)\nconst getFavorites = () => {\n  return favoritesStorage.toArray().map((e) => e[1])\n}\n\nexport { toggleFavorite, isInFavorite, getFavorites }\n","/** \n * Class representing a LocalStorage handler, with JSON and storage's name management \n *\n * Licence: GNU General Public License v3.0  \n * Author: Nicolas Chabloz  \n */\nexport default class {\n\n  /**\n   * Create a JsonStorage.\n   * \n   * @param {Object} [options={}] - Options\n   * @param {string} [options.name=\"default\"] - The name of the storage.\n   * @param {boolean} [options.listen=true] - Listen to storage events for data update\n   * @param {boolean} [options.trigger=true] - Trigger an event on \"window\" when data is set, changed or deleted in the storage\n   * @param {boolean} [options.eventName=\"jsonstorage\"] - The event's name to trigger \n   */  \n  constructor(options = {}) {\n    this.options = {\n      name: options.name || \"default\",\n      listen: options.listen || true,\n      trigger: options.trigger || true,\n      eventName: options.eventName || \"jsonstorage\"\n    };\n    this._reloadKeys();\n    // reload keys data when storage change from another tab\n    if (this.options.listen) {\n      window.addEventListener('storage', evt => {\n        if (!evt.key.startsWith(`${this.options.name}_`)) return;\n        this._reloadKeys();\n        if (this.options.trigger) {\n          window.dispatchEvent(new Event(this.options.eventName));\n        }\n      });\n    }\n  }\n\n  /**\n   * Private method\n   */\n  _reloadKeys() {\n    this.storageKeys = Object.keys(localStorage)\n      .filter(key => key.startsWith(`${this.options.name}_`))\n      .reduce((map, key) => map.set(key.substring(`${this.options.name}_`.length), 1), new Map());\n  }\n\n  /**\n   * Returns a new Iterator object that contains an array of [key, value] for each element in the storage\n   */\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n\n  /**\n   * Returns a new Iterator object that contains the keys for each element in the storage.\n   */\n  keys() {\n    return this.storageKeys.keys();\n  }\n\n  /**\n   * Returns the name of the nth key in the storage\n   * \n   * @param {integer} ind Indice\n   */\n  key(ind) {\n    let keys = [...this.keys()];\n    if (ind < 0 || ind >= keys.length) return null\n    return keys[ind];\n  }\n\n  /**\n   * Returns a new Iterator object that contains the values for each element in the storage.\n   */\n  *values() {\n    for (let k of this.keys()) {\n      yield this.getItem(k);\n    }\n  }\n\n  /**\n   * Returns a new Iterator object that contains an array of [key, value] for each element in the storage.\n   */\n  *entries() {\n    for (let k of this.keys()) {\n      yield [k, this.getItem(k)];\n    }\n  }\n\n  /**\n   * Calls callback once for each key-value pair present in the storage. The callback is called with the value and the key as parameters.\n   * \n   * @param {function} callback \n   */\n  forEach(callback) {\n    for (let entrie of this) {\n      callback(entrie[1], entrie[0]);\n    }\n  }\n\n  /**\n   * Return an array of [key, value] for each element in the storage.\n   */\n  toArray() {\n    return [...this.entries()];\n  }\n\n  /**\n   * Return an object with a propertie key: value for each element in the storage.\n   */\n  toObject() {\n    let obj = {};\n    for (let ent of this) {\n      obj[ent[0]] = ent[1];\n    }\n    return obj;\n  }\n\n  /**\n   * Return a JSON string representing an object with a propertie key: value for each element in the storage.\n   */\n  toJSON() {\n    return JSON.stringify(this.toObject());\n  }\n\n  /**\n   * Return the numbers of elements in the storage\n   */\n  get length() {\n    return this.storageKeys.size;\n  }\n\n  /**\n   * Return the numbers of elements in the storage (alias for this.length)\n   */\n  get size() {\n    return this.length;\n  }\n\n  /**\n   * Add the key and the key's value to the storage, or update that key's value if it already exists\n   * \n   * @param {string} key the name of the key you want to create/update.\n   * @param {*} val the value you want to give the key you are creating/updating.\n   */\n  setItem(key, val) {\n    localStorage.setItem(`${this.options.name}_${key}`, JSON.stringify(val));\n    this.storageKeys.set(key.toString(), 1);\n    if (this.options.trigger) {\n      window.dispatchEvent(new Event(this.options.eventName));\n    }\n  }\n\n  /**\n   * Private method\n   */\n  _genKey() {\n    return 'uid_' + Math.random().toString(36).substring(2, 10);\n  }\n\n  /**\n   * Add the value with a random unique key to the storage.\n   * Return the key.\n   * \n   * @param {*} val the value you want to give the key you are creating/updating.\n   */\n  addItem(val) {\n    let key = this._genKey();\n    while (this.storageKeys.has(key.toString())) key = this._genKey();\n    this.setItem(key, val);    \n    return key;\n  }\n\n  /**\n   * Return the value of the key in the storage. If the key does not exist, null is returned.\n   * \n   * @param {string} key the name of the key you want to retrieve the value of.\n   */\n  getItem(key) {\n    let val = localStorage.getItem(`${this.options.name}_${key}`);\n    if (val == null) return null;\n    return JSON.parse(val);\n  }\n\n  /**\n   * Remove the key from the storage if it exists. If there is no item associated with the given key, this method will do nothing.\n   * \n   * @param {string} the name of the key you want to remove. \n   */\n  removeItem(key) {\n    localStorage.removeItem(`${this.options.name}_${key}`);\n    this.storageKeys.delete(key.toString());\n    if (this.options.trigger) {\n      window.dispatchEvent(new Event(this.options.eventName));\n    }\n  }\n\n  /**\n   * Clears all keys in the storage\n   */\n  clear() {\n    for (let key of this.keys()) {\n      localStorage.removeItem(`${this.options.name}_${key}`);    \n    }\n    this.storageKeys.clear();\n    if (this.options.trigger) {\n      window.dispatchEvent(new Event(this.options.eventName));\n    }\n  }\n\n}\n","// Il n'y a en fait pas de section recherche à proprement parler. Ce fichier sert juste à ajouter des listeners sur\n// le champ de recherche, premièrement pour l'afficher/le cacher, puis pour rediriger vers l'url de recherche, avec\n// la query. C'est le display section qui va gérer la logique du listing\n\n// Tags pour la recherche\nconst searchTrigger = document.querySelector('#search-trigger')\nconst searchInput = document.querySelector('#search-input')\n\n// Quand on click sur la loupe, on affiche le champ de recherche et on focus l'input\nsearchTrigger.addEventListener('click', () => {\n  searchInput.classList.add('active')\n  searchInput.focus()\n})\n\n// Lorsque l'utilisateur sort du champ de recherche, on le cache et on le vide\nsearchInput.addEventListener('blur', () => {\n  searchInput.classList.remove('active')\n  searchInput.value = ''\n})\n\n// Lorsque l'utilisateur entre quelque chose dans le champ, on redirige vers l'url #search-:query, où query est\n// la valeur du camp encodée. On encode la chaine de recherche pour éviter les caractères spéciaux\n// (typiquement, un '-' qui embêterait notre fonction displaySection)\nsearchInput.addEventListener('change', () => {\n  window.location.hash = `#search-${encodeURIComponent(searchInput.value)}`\n})\n"],"names":[],"version":3,"file":"index.975ef6c8.js.map","sourceRoot":"/__parcel_source_root/"}